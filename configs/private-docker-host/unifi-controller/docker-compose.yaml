services:
  unifi-controller:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-controller
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - MONGO_USER=unifi
      # - MONGO_PASS=
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - MONGO_TLS= #optional
    env_file:
      - /root/unifi-controller/unifi.env
    volumes:
      - unifi-controller-config:/config
    ports:
      - 10.0.1.25:8443:8443
      - 10.0.1.25:3478:3478/udp
      - 10.0.1.25:10001:10001/udp
      - 10.0.1.25:8080:8080
      # - 10.0.1.25:1900:1900/udp #optional
      - 10.0.1.25:8843:8843 #optional
      - 10.0.1.25:8880:8880 #optional
      - 10.0.1.25:6789:6789 #optional
      - 10.0.1.25:5514:5514/udp #optional
    depends_on:
      - unifi-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.unifi.rule=Host(`unifi.lan.tarasa24.dev`)"
      - "traefik.http.routers.unifi.entrypoints=https"
      - "traefik.http.routers.unifi.tls=true"
      - "traefik.http.routers.unifi.middlewares=hsts@file"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"
    restart: unless-stopped

  unifi-db:
    image: docker.io/mongo:8
    container_name: unifi-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      # - MONGO_INITDB_ROOT_PASSWORD=
      - MONGO_USER=unifi
      # - MONGO_PASS=
      - MONGO_DBNAME=unifi
      - MONGO_AUTHSOURCE=admin
    env_file:
      - /root/unifi-controller/unifi.env
    volumes:
      - unifi-db:/data/db
      - /root/unifi-controller/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    restart: unless-stopped

volumes:
  unifi-controller-config:
    external: true
    name: root_unifi-controller-config
  unifi-db:
    external: true
    name: root_unifi-db
