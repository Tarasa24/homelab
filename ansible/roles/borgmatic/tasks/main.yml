---
- name: Install borg
  ansible.builtin.apk:
    name: [borgbackup, borgmatic, openssh, yq]
    state: present

- name: Make sure .ssh directory exists
  ansible.builtin.file:
    dest: /root/.ssh
    state: directory
    mode: 0700
- name: Import ssh private key
  ansible.builtin.copy:
    src: ../../../secrets/backup/ssh/id_ed25519
    dest: /root/.ssh/id_ed25519
    mode: 0600

- name: Create /etc/borgmatic directory
  ansible.builtin.file:
    dest: /etc/borgmatic
    state: directory
- name: Copy over borgmatic configuration
  ansible.builtin.copy:
    src: ../../../configs/backup/borg/{{ ansible_hostname }}.yaml
    dest: /etc/borgmatic/config.yaml
    mode: 0644

- name: Import data from backup
  ansible.builtin.command:
    cmd: "borgmatic extract --archive latest --destination /"
  ignore_errors: true
  register: borgmatic_extract

- name: Fail if borgmatic extract failed (dont fail if error contains "No archives found in the repository")
  ansible.builtin.fail:
    msg: "borgmatic extract failed"
  when: borgmatic_extract.rc != 0 and "No archives found in the repository" not in borgmatic_extract.stderr

- name: Extract source_directories from borgmatic configuration and export from the role
  ansible.builtin.shell: "yq '.location.source_directories[]' /etc/borgmatic/config.yaml"
  register: source_directories

- name: Make sure docker volumes get created (if path contains /var/lib/docker/volumes)
  ansible.builtin.command:
    cmd: "docker volume create {{ item | regex_replace('/var/lib/docker/volumes/', '') | regex_replace('/_data', '') }}"
  with_items: "{{ source_directories.stdout_lines }}"
  when: item is search('/var/lib/docker/volumes')  

- name: Setup cron job for borgmatic
  ansible.builtin.cron:
    name: "Run borgmatic backup"
    job: "borgmatic --verbosity 0"
    minute: "0"
    hour: "2"
    state: present
