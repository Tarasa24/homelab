---
- name: Configure Alpine Docker template in LXC container
  hosts: lxc_dmz_router
  gather_facts: false
  vars:
    ansible_host: "{{ hostvars[inventory_hostname].ansible_host }}"
    lxc_host: "{{ hostvars[inventory_hostname].lxc_host }}"

    wireguard_client_ip: "10.2.0.2"
    wireguard_server_endpoint_ip: "{{  hostvars[groups['linode_dmz_bastion'][0]].inventory_hostname }}"
    wireguard_server_ip: "10.2.0.1"
    wireguard_server_port: "51820"
    wireguard_client_privatekey: "{{ lookup('file', '../../../secrets/wireguard/client/privatekey') }}"
    wireguard_server_publickey: "{{ lookup('file', '../../../secrets/wireguard/server/publickey') }}"
    wireguard_psk: "{{ lookup('file', '../../../secrets/wireguard/presharedkey') }}"
  roles:
    - role: lxc_python3

  tasks:
    - name: Install wireguard
      ansible.builtin.apk:
        name:
          - wireguard-tools-wg-quick
          - iptables
        state: present
        no_cache: true

    - name: Enable ipv4 forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
        reload: true
    - name: Down the current wg0 interface if it exists
      ansible.builtin.command: wg-quick down wg0
      changed_when: false
      failed_when: false
    - name: Create /etc/wireguard directory
      ansible.builtin.file:
        path: /etc/wireguard
        state: directory
    - name: Copy wireguard client config
      ansible.builtin.template:
        src: ../../../configs/dmz_router/wg0.conf.j2
        dest: /etc/wireguard/wg0.conf
        mode: '0600'

    - name: Up the wg0 interface
      ansible.builtin.command: wg-quick up wg0
