- name: Initialize proxmox host to the state expected by terraform
  hosts: proxmox
  gather_facts: false
  vars:
    disks: {
      "USB-HDD": "/dev/disk/by-uuid/d10e88e6-9a20-4d5f-972f-c432c26f9019",
      "USB-SSD": "/dev/disk/by-uuid/c06ebfa7-0bf3-4751-87c4-19c5f0c3515f",
      "USB-BITCOIN": "/dev/disk/by-uuid/475ebfe4-0fc7-4770-990e-cba43a90d7b0"
    }
    storage: {
      "USB-HDD": {
        "type": "dir",
        "path": "/mnt/USB-HDD",
        "content": "images,rootdir,vztmpl,snippets"
      },
      "USB-SSD": {
        "type": "dir",
        "path": "/mnt/USB-SSD",
        "content": "images,rootdir,vztmpl,snippets"
      }
    }
    required_directories: [
      "/mnt/USB-SSD/ssl",
      "/mnt/USB-SSD/backup",
      "/mnt/USB-SSD/downloads",
      "/mnt/USB-HDD/jellyfin-media",
    ]

  tasks:
    - name: Create mount points
      ansible.builtin.file:
        name: "/mnt/{{ item.key }}"
        state: directory
      with_dict: "{{ disks }}"
    - name: Make sure the disks are in fstab and mounted
      ansible.builtin.mount:
        name: "/mnt/{{ item.key }}"
        src: "{{ item.value }}"
        fstype: ext4
        state: present
        opts: defaults
      with_dict: "{{ disks }}"
      notify: reload systemd
    - name: Remove storage from the cluster only if it exists
      ansible.builtin.shell:
        cmd: pvesm list {{ item.key }} && pvesm remove {{ item.key }}
      with_dict: "{{ storage }}"
      register: remove_storage
      failed_when: remove_storage.rc == 1
    - name: Add storage to cluster as a directory
      ansible.builtin.shell:
        cmd: pvesm add dir {{ item.key }} --path {{ item.value.path }} --content {{ item.value.content }}
      with_dict: "{{ storage }}"
      notify: reload systemd
    - name: Create required directories
      ansible.builtin.file:
        name: "{{ item }}"
        state: directory
        owner: 101000
        group: 101000
      with_items: "{{ required_directories }}"
    - name: "Create DMZ bridge"
      ansible.builtin.copy:
        content: |
          auto vmbr1
          iface vmbr1 inet manual
          	bridge-ports none
          	bridge-stp off
          	bridge-fd 0
        dest: /etc/network/interfaces.d/vmbr1.cfg
    - name: "Up the DMZ bridge"
      ansible.builtin.command:
        cmd: ifup vmbr1

  handlers:
    - name: reload systemd
      ansible.builtin.systemd:
        daemon_reload: true
